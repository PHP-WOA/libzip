 CMakeLists.txt     | 16 ++++------------
 lib/CMakeLists.txt | 13 ++++++-------
 2 files changed, 10 insertions(+), 19 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6e35082..4b0ee11 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -269,6 +269,9 @@ ENDIF()
 IF(MSVC)
   ADD_DEFINITIONS("-D_CRT_SECURE_NO_WARNINGS")
   ADD_DEFINITIONS("-D_CRT_NONSTDC_NO_DEPRECATE")
+IF(CMAKE_SIZEOF_VOID_P EQUAL 4)
+ADD_DEFINITIONS("-D_USE_32BIT_TIME_T=1")
+ENDIF(CMAKE_SIZEOF_VOID_P EQUAL 4)
 ENDIF(MSVC)
 
 if(WIN32)
@@ -337,7 +340,7 @@ SET(includedir \${prefix}/${CMAKE_INSTALL_INCLUDEDIR})
 IF(CMAKE_SYSTEM_NAME MATCHES BSD)
   SET(PKG_CONFIG_RPATH "-Wl,-R\${libdir}")
 ENDIF(CMAKE_SYSTEM_NAME MATCHES BSD)
-get_target_property(LIBS_PRIVATE zip LINK_LIBRARIES)
+get_target_property(LIBS_PRIVATE libzip_a LINK_LIBRARIES)
 foreach(LIB ${LIBS_PRIVATE})
   if(LIB MATCHES "^/")
     get_filename_component(LIB ${LIB} NAME_WE)
@@ -463,13 +466,6 @@ FILE(COPY ${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/runtest
   FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
   )
 
-target_include_directories(zip
-    PUBLIC
-        $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}>
-        $<BUILD_INTERFACE:${PROJECT_BINARY_DIR}>
-        $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDE_DIR}>
-)
-
 # create package config file
 INCLUDE(CMakePackageConfigHelpers)
 WRITE_BASIC_PACKAGE_VERSION_FILE("${PROJECT_BINARY_DIR}/libzip-version.cmake"
@@ -486,10 +482,6 @@ IF(LIBZIP_DO_INSTALL)
     )
 ENDIF()
 
-# Add targets to the build-tree export set
-EXPORT(TARGETS zip
-  FILE "${PROJECT_BINARY_DIR}/${PROJECT_NAME}-targets.cmake")
-
 # installation
 IF(LIBZIP_DO_INSTALL)
   INSTALL(FILES ${PROJECT_BINARY_DIR}/zipconf.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index a68360c..89a6996 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -184,6 +184,7 @@ IF(HAVE_LIBBZ2)
 ENDIF()
 
 IF(HAVE_LIBLZMA)
+  add_compile_definitions(LZMA_API_STATIC)
   SET(LIBZIP_OPTIONAL_FILES ${LIBZIP_OPTIONAL_FILES} zip_algorithm_xz.c)
 ENDIF()
 
@@ -209,16 +210,14 @@ IF(HAVE_CRYPTO)
 )
 ENDIF()
 
-ADD_LIBRARY(zip ${LIBZIP_SOURCES} ${LIBZIP_EXTRA_FILES} ${LIBZIP_OPTIONAL_FILES} ${LIBZIP_OPSYS_FILES})
+SET(CMAKE_DEBUG_POSTFIX _debug)
 
-IF(SHARED_LIB_VERSIONNING)
-SET_TARGET_PROPERTIES(zip PROPERTIES VERSION 5.3 SOVERSION 5)
-ENDIF()
-
-TARGET_LINK_LIBRARIES(zip PRIVATE ${ZLIB_LIBRARIES} ${OPTIONAL_LIBRARY})
+ADD_LIBRARY(libzip_a STATIC ${LIBZIP_SOURCES} ${LIBZIP_EXTRA_FILES} ${LIBZIP_OPTIONAL_FILES} ${LIBZIP_OPSYS_FILES})
+SET_TARGET_PROPERTIES(libzip_a PROPERTIES VERSION 5.3 SOVERSION 5 COMPILE_PDB_NAME_DEBUG libzip_a_debug)
+TARGET_LINK_LIBRARIES(libzip_a ${ZLIB_LIBRARY} ${OPTIONAL_LIBRARY})
 
 IF(LIBZIP_DO_INSTALL)
-  INSTALL(TARGETS zip
+  INSTALL(TARGETS libzip_a
     EXPORT ${PROJECT_NAME}-targets
     RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
     ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
